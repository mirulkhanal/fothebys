// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Art {
  id                 String       @id @default(cuid()) @db.VarChar(50)
  artist_name        String       @db.VarChar(50)
  year_of_production Int          @db.Integer
  subject_class      String?      @db.VarChar(20)
  category_id        String       @db.VarChar(50)
  catalog_id         String       @db.VarChar(50)
  created_at         DateTime     @default(now()) @db.Timestamptz
  updated_at         DateTime     @default(now()) @db.Timestamptz
  seller_id          String       @db.VarChar(50)
  category           Category     @relation(fields: [category_id], references: [id])
  catalog            Catalog      @relation(fields: [catalog_id], references: [id])
  user               User         @relation(fields: [seller_id], references: [id])
  Drawings           Drawings[]
  Paintings          Paintings[]
  Photos             Photos[]
  Sculptures         Sculptures[]
  Carvings           Carvings[]
}

model Category {
  id         String   @id @default(cuid()) @db.VarChar(50)
  name       String   @db.VarChar(50)
  created_at DateTime @default(now()) @db.Timestamptz
  updated_at DateTime @default(now()) @db.Timestamptz
  Art        Art[]
}

model Catalog {
  id         String  @id @default(cuid()) @db.VarChar(50)
  auction_id String  @db.VarChar(50)
  auction    Auction @relation(fields: [auction_id], references: [id])
  Art        Art[]
}

model Auction {
  id         String    @id @default(cuid()) @db.VarChar(50)
  date       DateTime  @db.Date
  title      String    @db.VarChar(20)
  location   String    @db.VarChar(120)
  created_at DateTime  @default(now()) @db.Timestamptz
  updated_at DateTime  @default(now()) @db.Timestamptz
  Catalog    Catalog[]
}

model User {
  id           String         @id @default(cuid()) @db.VarChar(50)
  email        String         @unique @db.VarChar(50)
  password     String         @db.VarChar(60)
  user_type    User_Type      @default(BUYER)
  created_at   DateTime       @default(now()) @db.Timestamptz
  updated_at   DateTime       @default(now()) @db.Timestamptz
  Art          Art[]
  User_Profile User_Profile[]
}

enum User_Type {
  ADMIN
  BUYER
  SELLER
}

model User_Profile {
  id         String  @id @default(cuid()) @db.VarChar(50)
  user_id    String  @db.VarChar(50)
  first_name String  @db.VarChar(20)
  last_name  String  @db.VarChar(20)
  phone      String  @unique @db.VarChar(20)
  address    String  @db.VarChar(120)
  image      String? @db.VarChar(120)
  User       User    @relation(fields: [user_id], references: [id])
}

model Drawings {
  id     String  @id @default(cuid()) @db.VarChar(20)
  image  String  @db.VarChar(120)
  medium String  @db.VarChar(50)
  framed Boolean @default(false) @db.Boolean
  height Int     @db.Integer
  width  Int     @db.Integer
  Art    Art     @relation(fields: [id], references: [id])
}

model Paintings {
  id     String  @id @default(cuid()) @db.VarChar(20)
  image  String  @db.VarChar(120)
  medium String  @db.VarChar(50)
  framed Boolean @default(false) @db.Boolean
  height Int     @db.Integer
  width  Int     @db.Integer
  Art    Art     @relation(fields: [id], references: [id])
}

model Photos {
  id     String   @id @default(cuid()) @db.VarChar(20)
  image  String   @db.VarChar(120)
  type   Art_type @default(COLOR)
  framed Boolean  @default(false) @db.Boolean
  height Int      @db.Integer
  width  Int      @db.Integer
  Art    Art      @relation(fields: [id], references: [id])
}

enum Art_type {
  MONOCHROME
  COLOR
}

model Sculptures {
  id       String @id @default(cuid()) @db.VarChar(20)
  image    String @db.VarChar(120)
  material String @db.VarChar(50)
  height   Int    @db.Integer
  length   Int    @db.Integer
  width    Int    @db.Integer
  weight   Int    @db.Integer
  Art      Art    @relation(fields: [id], references: [id])
}

model Carvings {
  id       String @id @default(cuid()) @db.VarChar(50)
  image    String @db.VarChar(120)
  material String @db.VarChar(50)
  height   Int    @db.Integer
  length   Int    @db.Integer
  width    Int    @db.Integer
  weight   Int    @db.Integer
  Art      Art    @relation(fields: [id], references: [id])
}
